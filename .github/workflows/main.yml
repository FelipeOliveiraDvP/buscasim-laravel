name: Deploy on shared hosting

on: [push]

jobs:
  deploy:
    name: Build Laravel and React assets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" >> .env

      - name: Setup PHP and required extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
        
      - name: Install Laravel dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-req=ext-imagick

      - name: Generate key
        run: php artisan key:generate
      
      - name: Cache api routes
        run: php artisan route:cache
        
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
  
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
  
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
  
      - name: Build frontend assets
        run: |
          npm install
          npm run build

      - name: Copy files to hosting
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SSH_PORT }}
          source: ./*
          target: "${{ secrets.SSH_TARGET }}"
